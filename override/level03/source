


static void			decrypt(unsigned int nb)
{
	// CANARY								   -0xc(%ebp) 
	char			c = 0;					// -0xd(%ebp)
	unsigned int	nb1 = 0x33617c7d;		// -0x11(%ebp)
	unsigned int	nb2 = 0x7b66737e;		// -0x15(%ebp)
	unsigned int	nb3 = 0x67667360;		// -0x19(%ebp)
	unsigned int	nb4 = 0x757c7d51;		// -0x1d(%ebp)
	int		 		nb5;  					// -0x24(%ebp)
	int				nb6;					// -0x28(%ebp)
	int		 		nb7 = -1;				// -0x2c(%ebp)
	
	nb5 = strlen(&nb4);
	while (nb5-- > 0)
	{
		*(nb4 + nb5) = *((nb4 + nb5) ^ nb);
	}
	nb5 = strncmp(&nb4, "Congratulations!");
	if (nb5 == 0)
	    system("/bin/sh");
	else
		puts("\nInvalid Password");
	// CANARY_CHECK
}

static int			test(int nb, int nb2)
{
	int				ret;

	switch (nb2 - nb1)
	{
		case 1:
			ret = decrypt(1);
			break ;
		case 2:
			ret = decrypt(2);
			break;
		case 3:
			ret = decrypt(3);
			break;
		...
		case 21:
			ret = decrypt(3);
			break;
		default:
			ret = decrypt(rand());
	}
	return ret;
}

int			main(void)
{
	int		nb;						// 0x1c(%esp)

	srand(time(NULL));
	puts('*' <repeats 35 times>);
	puts("*\t\tlevel03\t\t**");
	puts('*' <repeats 35 times>);
	printf("Password:");	
	scanf("%d", nb);
	test(nb, 322424845);			// 0x1337d00d
	return 0;
}